name: Installer builder

on:
    push:
        branches:
            - master
        paths-ignore:
            - '**/README.md'
            - '**/LICENSE'
    pull_request:
        branches:
            - master
        paths-ignore:
            - '**/README.md'
            - '**/LICENSE'
    schedule:
        -   cron: '0 23 * * 4' # Once a week at 23:00 on Thursday

jobs:
    build:
        name: Build

        runs-on: ubuntu-20.04

        strategy:
            matrix:
                php: [ '8.1' ]

        steps:
            -   uses: actions/checkout@v2

            -   uses: FranzDiebold/github-env-vars-action@v2

            -   name: Setup PHP
                id: setup-php
                uses: shivammathur/setup-php@v2
                with:
                    php-version: ${{ matrix.php }}
                    extensions: dom, curl, libxml, mbstring, zip, redis
                    tools: composer:v2, symfony
                    coverage: none

            -   name: Install project
                run: |
                    rm LICENSE
                    rm README.md
                    symfony new newproject --full --no-git --version="6.0"
                    cd newproject
                    cp -Rp . ../
                    cd ..
                    rm -rf newproject
                    rm composer.lock
                    rm docker-compose*
                    composer config extra.symfony.allow-contrib true
                    composer config minimum-stability dev
                    composer config prefer-stable true
                    composer require numberninecms/cms:^0.4 numberninecms/chapterone:^0.4 --ignore-platform-reqs --with-all-dependencies

            -   name: "Check file existence"
                uses: andstor/file-existence-action@v1
                with:
                    files: "docker-compose.yml, docker/"
                    allow_failure: true

            -   name: Create .env.local file
                run: |
                    echo "APP_NAME=numbernine" > .env.local
                    echo "DATABASE_URL=mysql://user:user@mysql:3306/numbernine_app?serverVersion=8.0" >> .env.local
                    echo "REDIS_URL=redis://redis:6379" >> .env.local
                    echo "MAILER_DSN=smtp://maildev:25" >> .env.local

            -   name: Install redis bundle
                run: |
                    composer require numberninecms/redis --no-scripts --ignore-platform-reqs --with-all-dependencies
                    php bin/console cache:clear
                    composer dumpautoload

            -   name: Build Docker image
                run: docker build --no-cache -t numberninecms/installer:0.4 -t numberninecms/installer:latest -f ./build/Dockerfile .

            -   name: Save Docker image as artifact
                run: docker save -o /tmp/installer.tar numberninecms/installer:0.4 numberninecms/installer:latest

            -   name: Upload artifact
                uses: actions/upload-artifact@v2
                with:
                    name: installer
                    path: /tmp/installer.tar

    test:
        name: Test

        needs: build

        runs-on: ubuntu-20.04

        strategy:
            matrix:
                php: [ '8.1' ]

        steps:
            -   name: Download artifact
                uses: actions/download-artifact@v2
                with:
                    name: installer
                    path: /tmp

            -   name: Load Docker image
                run: |
                    docker load --input /tmp/installer.tar
                    docker image ls -a

            -   name: Create a new project
                run: |
                    docker run --rm -t -e HOST_PWD=$PWD \
                        -v $PWD:/srv/app -v /var/run/docker.sock:/var/run/docker.sock \
                        numberninecms/installer:latest testproject -v

            -   name: Check that website is up and running
                run: wget --spider --no-check-certificate https://testproject.localhost/

    deploy:
        name: Deploy

        needs: [build, test]

        runs-on: ubuntu-20.04

        strategy:
            matrix:
                php: [ '8.1' ]

        steps:
            -   name: Download artifact
                uses: actions/download-artifact@v2
                with:
                    name: installer
                    path: /tmp

            -   name: Load Docker image
                run: |
                    docker load --input /tmp/installer.tar
                    docker image ls -a

            -   name: Push Docker image
                if: github.ref == 'refs/heads/master'
                run: |
                    echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
                    docker push numberninecms/installer:0.4
                    docker push numberninecms/installer:latest
